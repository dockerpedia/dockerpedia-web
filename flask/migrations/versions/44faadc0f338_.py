"""empty message

Revision ID: 44faadc0f338
Revises: b28e701ffd22
Create Date: 2018-02-20 14:29:39.675768

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44faadc0f338'
down_revision = 'b28e701ffd22'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('full_size', sa.Integer(), nullable=True),
    sa.Column('id_docker', sa.Integer(), nullable=True),
    sa.Column('image_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['image_id'], ['image.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_image_id'), 'tag', ['image_id'], unique=False)
    op.create_table('tag_layers',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('layer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['layer_id'], ['layer.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('tag_id', 'layer_id')
    )
    op.drop_table('image_layers')
    op.add_column(u'image', sa.Column('full_name', sa.String(length=255), nullable=True))
    op.add_column(u'image', sa.Column('namespace', sa.String(length=255), nullable=True))
    op.add_column(u'image', sa.Column('user', sa.String(length=255), nullable=True))
    op.alter_column(u'image', 'name',
               existing_type=sa.VARCHAR(length=128),
               nullable=True)
    op.drop_constraint(u'image_name_key', 'image', type_='unique')
    op.drop_constraint(u'image_real_name_key', 'image', type_='unique')
    op.drop_column(u'image', 'real_name')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(u'image', sa.Column('real_name', sa.VARCHAR(length=128), autoincrement=False, nullable=False))
    op.create_unique_constraint(u'image_real_name_key', 'image', ['real_name'])
    op.create_unique_constraint(u'image_name_key', 'image', ['name'])
    op.alter_column(u'image', 'name',
               existing_type=sa.VARCHAR(length=128),
               nullable=False)
    op.drop_column(u'image', 'user')
    op.drop_column(u'image', 'namespace')
    op.drop_column(u'image', 'full_name')
    op.create_table('image_layers',
    sa.Column('image_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('layer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['image_id'], [u'image.id'], name=u'image_layers_image_id_fkey'),
    sa.ForeignKeyConstraint(['layer_id'], [u'layer.id'], name=u'image_layers_layer_id_fkey'),
    sa.PrimaryKeyConstraint('image_id', 'layer_id', name=u'image_layers_pkey')
    )
    op.drop_table('tag_layers')
    op.drop_index(op.f('ix_tag_image_id'), table_name='tag')
    op.drop_table('tag')
    # ### end Alembic commands ###
